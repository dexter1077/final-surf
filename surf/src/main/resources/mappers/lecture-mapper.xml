<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lectureMapper">
  	<resultMap id="lectureResult" type="Lecture">
  		<result column="class_no" property="classNo"/>
  		<result column="class_title" property="classTitle"/>
  		<result column="create_date" property="createDate"/>
  		<result column="thumbnail" property="thumbnail"/>
  		<result column="intro_file" property="introFile"/>
  		<result column="intro_title" property="introTitle"/>
  		<result column="intro_content" property="introContent"/>
  		<result column="status" property="status"/>
  		<result column="period" property="period"/>
  		<result column="need" property="need"/>
  		<result column="note" property="note"/>
  		<result column="pos_term" property="posTerm"/>
  		<result column="price" property="price"/>
  		<result column="subcat_no" property="subcatNo"/>
  		<result column="user_no" property="userNo"/>
		<result column="count" property="fundingCount"/>
		<result column="nickname" property="teacherName"/>
		<result column="subcat_name" property="subCat"/>
		<result column="maincat_name" property="mainCat"/>
		<result column="scrap" property="scrapCount"/>
		<result column="students" property="students"/>
		<result column="star" property="star"/>
		<result column="surveyCount" property="surveyCount"/>
		<result column="profile_image" property="teacherProfile"/>
		<result column="teacher_no" property="teacherNo"/>
	</resultMap>

  	<resultMap id="studingResult" type="Studing">
		<result column="user_no" property="userNo"/>
		<result column="class_no" property="classNo"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="video_no" property="videoNo"/>
	</resultMap>

	<resultMap type="ScrapSupport" id="scrapResult">
		<result column="user_no" property="userNo"/>
		<result column="class_no" property="classNo"/>
		<result column="type" property="type"/>
		<result column="scrap_date" property="scrapDate"/>
	</resultMap>

	<resultMap type="ClassIntro" id="introResult">
		<result column="intro_order" property="introOrder"/>
		<result column="Class_no" property="classNo"/>
		<result column="intro_image" property="introImage"/>
		<result column="intro_content" property="introContent"/>
	</resultMap>

	<resultMap id="classVideoResult" type="ClassVideo">
		<result column="video_no" property="videoNo"/>
		<result column="class_no" property="classNo"/>
		<result column="chap_order" property="chapOrder"/>
		<result column="video_order" property="videoOrder"/>
		<result column="sub_title" property="subTitle"/>
		<result column="origin_name" property="originName"/>
		<result column="change_name" property="changeName"/>
		<result column="watched" property="watched"/>
	</resultMap>

	<resultMap id="chapterResult" type="Chapter">
		<result column="chap_order" property="chapOrder"/>
		<result column="class_no" property="classNo"/>
		<result column="chap_name" property="chapName"/>
	</resultMap>

	<resultMap id="chapterResult2" type="Chapter">
		<result column="chap_order" property="chapOrder"/>
		<result column="class_no" property="classNo"/>
		<result column="chap_name" property="chapName"/>
		<collection column="class_no" property="classVideoList" javaType="java.util.ArrayList"
			    	ofType="ClassVideo" select="selectLectureVideo"/>
	</resultMap>

	<resultMap type="Survey" id="surveyResult">
		<result column="survey_no" property="surveyNo"/>
		<result column="nickname" property="userNo"/>
		<result column="quality" property="quality"/>
		<result column="satisfaction" property="satisfaction"/>
		<result column="difficulty" property="difficulty"/>
		<result column="price" property="price"/>
		<result column="score" property="score"/>
		<result column="review" property="review"/>
		<result column="create_date" property="createDate"/>
		<result column="class_no" property="classNo"/>
		<result column="teacher_no" property="teacherNo"/>
	</resultMap>

	<resultMap type="ClassInquiry" id="inquiryResult">
		<result column="inquiry_no" property="inquiryNo"/>
		<result column="inq_content" property="inqContent"/>
		<result column="inq_date" property="inqDate"/>
		<result column="ans_content" property="ansContent"/>
		<result column="ans_date" property="ansDate"/>
		<result column="class_no" property="classNo"/>
		<result column="user_no" property="userNo"/>
		<result column="teacher_no" property="teacherNo"/>
		<result column="tea_no" property="teaNo"/>
		<result column="class_title" property="classTitle"/>
		<result column="profile_image" property="teacherImage"/>
	</resultMap>

  	<!--
  		@author HeeRak
  		월별정산_ 한 강사의 모든 클래스번호, 이름 조회
  	-->
  	<select id="selectTeacherClassAll" resultMap="lectureResult">
  		select
  			   class_no
  			 , class_title
  		  from lecture
  		 where user_no = #{userNo}
  		   and status = 'O'
  		 order
  		    by create_date asc
  	</select>

  	<!--
		@author yeji lee
		찜하기 중복 체크
	 -->
	<select id="scrapCheck" parameterType="map" resultType="_int">
		select
			   count(*)
		  from scrap_support
		 where
		 	   user_no = #{userNo}
		   and
		       class_no = #{classNo}
		   and
		       type = 'S'
	</select>

	<!--
		@author: yeji lee
		찜하기
	 -->
	<insert id="ajaxScrapLecture" parameterType="map">
		insert
		  into
		  	   scrap_support
		values
			   (
				 ${userNo}
			   , ${classNo}
			   , 'S'
			   , SYSDATE
			   )
	</insert>

  	<!--
		@author leeyeji
		펀딩 클래스 페이징
	 -->
	 <select id="selectFundingCount" resultType="_int">
	 	select
	 		   count(*)
	 	  from class_funding
	 </select>

	<!--
		@author leeyeji
		펀딩 클래스 조회용
	 -->
	<select id="selectFundingList" resultMap="lectureResult">
		select
               class_no
             , thumbnail
             , class_title
             , create_date
             , f.count
             , t.nickname
          from lecture l
          join class_funding f using(class_no)
          join teacher t on(l.user_no = t.teacher_no)
         where l.status = 'F'
         order
            by create_date desc
	</select>

	<!--
		@author leeyeji
		펀딩 클래스 상세 조회용
	 -->
	 <select id="selectFundingDetail" resultMap="lectureResult">
	 	select
               class_no
             , class_title
             , intro_file
             , intro_content
             , count
             , subcat_name
             , maincat_name
          from lecture
          join class_funding using(class_no)
          join subcat using(subcat_no)
          join maincat using(maincat_no)
         where status = 'F'
           and class_no = #{classNo}
	 </select>

	 <!--
	 	@author leeyeji
	 	펀딩 클래스 응원하기
	  -->
	 <insert id="ajaxSupportLecture" parameterType="map">
	 	insert
		  into
		  	   scrap_support
		values
			   (
				 ${userNo}
			   , ${classNo}
			   , 'C'
			   , SYSDATE
			   )
	 </insert>

	<!--
		@author : yeji Lee
		페이징 처리
	 -->
	<select id="selectListCount" resultType="_int">
		select
		 	   count(*)
		  from lecture
		 where status = 'O'
		   <if test="sno != 0">
		   and subcat_no = #{sno}
		   </if>
		   <if test="keyword != ''">
		   and class_title like '%'||#{keyword}||'%'
		   </if>

	</select>

	<!--
		@author : yeji Lee
		클래스 리스트 조회
	 -->
	<select id="selectLectureList" resultMap="lectureResult">
		select
		       l.class_no
		     , l.class_title
		     , l.create_date
		     , l.thumbnail
		     , l.price
		     , (select
		               round(avg(score))
		          from survey
		         where class_no = l.class_no) star
		     , (select
		               count(*)
		          from scrap_support
		         where type = 'S'
		           and class_no = l.class_no) scrap
		     , (select
		               count(*)
		          from payment
		         where class_no = l.class_no) students
		     , t.nickname
		  from lecture l
		  left outer join (
		                    select
		                           teacher_no, nickname
		                      from teacher
		                  ) t
		                  on l.user_no = t.teacher_no
		 where l.status = 'O'
		   <if test="sno != 0">
		   and subcat_no = #{sno}
		   and rownum between 1 and 5
		   </if>
		   <if test="keyword != ''">
		   and l.class_title like '%'||#{keyword}||'%'
		   </if>
		 order
		    by star desc
	</select>

	<!--
		@author yeji lee
		클래스 상세 조회
	 -->
	<select id="selectLecture" resultMap="lectureResult">
		select
               l.class_no
             , l.class_title
             , l.pos_term
             , l.price
             , l.intro_file
             , l.intro_title
             , l.intro_content
             , l.need
             , l.note
             , l.period
             , (select
                       round(avg(score))
                  from survey
                 where class_no = l.class_no) star
             , (select
                       count(*)
                  from survey
                 where class_no = l.class_no) survey
             , (select
                       count(*)
                  from payment
                 where class_no = l.class_no) students
            , t.nickname nickname
            , t.profile_image profile_image 
          from lecture l
          join teacher t on(l.subcat_no = t.subcat_no)
         where l.class_no = #{classNo}
	</select>
	
	<!-- 
		@author yeji lee
		결제 내역 조회
	 -->
	<select id="selectPayCount" parameterType="Payment" resultType="_int">
		select 
		       count(*)
		  from payment
		 where class_no = #{classNo}
		   and user_no = #{userNo}
	</select>

	<!--
		@author yeji lee
		클래스 소개 조회
	 -->
	<select id="selectLectureIntro" resultMap="introResult">
		select
               class_no
             , intro_order
             , intro_image
             , intro_content
          from class_intro
         where class_no = #{classNo}
	</select>

	<!--
		@author yeji lee
		클래스 챕터 조회
	 -->
	<select id="selectLectureChapter" resultMap="chapterResult2">
		select
               chap_order
             , class_no
             , chap_name
          from chapter
         where class_no = #{classNo}
	</select>

	<!--
		@author yeji lee
		클래스 챕터 조회(비디오)
	 -->
	<select id="selectLectureVideo" resultMap="classVideoResult">
		select
               video_no
             , chap_order
             , video_order
             , sub_title
             , origin_name
             , change_name
          from class_video
         where class_no = #{classNo}
         order
            by video_no asc
	</select>

	<!--
		@author yeji lee
		클래스 후기 조회
	 -->
	<select id="selectLectureReview" resultMap="surveyResult">
		select
               s.survey_no
             , m.nickname
             , s.score
             , s.review
          from survey s
          join member m on(s.user_no = m.user_no)
         where class_no = #{userNo}
	</select>

	<!--
		@author yeji lee
		클래스 문의 조회
	 -->
	<select id="selectLectureInquiry" resultMap="inquiryResult">
		select
               i.inquiry_no
             , i.inq_content
             , TO_CHAR(i.inq_date, 'YYYY-MM-DD HH24:MI') inq_date
             , i.ans_content
             , TO_CHAR(i.ans_date, 'YYYY-MM-DD HH24:MI') ans_date
             , m.nickname user_no
             , t.teacher_no teaNo
             , t.nickname teacher_no
             , t.profile_image
             , l.class_no
          from lecture l
          join class_inquiry i on(i.class_no = l.class_no)
          left outer join (
                            select
                                   teacher_no
                                 , nickname
                                 , profile_image
                                 , subcat_no
                              from teacher
                          ) t
                  on l.subcat_no = t.subcat_no
          join member m on(m.user_no = i.user_no)
         where l.class_no = #{classNo}
	</select>

	<!--
		선생님 번호 조회
	 -->
	 <select id="selectTeacherNo" resultType="_int">
	 	select
		       t.teacher_no
		  from teacher t
		  join lecture l on (l.subcat_no = t.subcat_no)
		 where l.class_no = #{classNo}
	 </select>

	<!--
		@author yeji lee
		클래스 문의 등록
	 -->
	<insert id="ajaxEnrollInquiry">
		insert
		  into class_inquiry
		  (
		    inquiry_no
		  , inq_content
		  , class_no
          , user_no
          , teacher_no
		  )
		  values
		  (
		    SEQ_INO.nextval
		  , #{inqContent}
		  , #{classNo}
		  , #{userNo}
          , #{teaNo}
		  )
	</insert>
	
	<!-- 
		@author yeji lee
		내 클래스 조회
	 -->
	<select id="selectMyLecture" resultMap="lectureResult">
		select
		       p.class_no
		     , p.user_no
		     , l.class_title
		     , l.thumbnail
		     , t.teacher_no
		  from payment p
		  join lecture l on(p.class_no = l.class_no)
		  join teacher t on(l.subcat_no = t.subcat_no)
		 where p.user_no = #{userNo}
		 order
		    by p.order_no desc
	</select>

	<!--
		@author yeji lee
		유저 스크랩 클래스 목록 조회
	 -->
	<select id="selectScrapCount" resultType="_int">
		select
		       count(*)
		  from scrap_support
         where user_no = #{userNo}
           and type = 'S'
	</select>

	<select id="selectScrapList" resultMap="lectureResult">
		select
	 		   l.class_no
             , l.class_title
             , t.nickname
             , l.price
             , l.create_date
             , l.thumbnail
             , (select
                       round(avg(score), 1)
                  from survey
                 where class_no = l.class_no) star
             , (select
                       count(*)
                  from scrap_support
                 where type = 'S'
                   and class_no = l.class_no) scrap
         from lecture l
         join teacher t on(l.user_no = t.teacher_no)
         join scrap_support s on(l.class_no = s.class_no)
        where s.user_no = #{userNo}
          and s.type = 'S'
        order
           by scrap_date desc
	</select>

  	<!--
		한 강사의 '클래스 목록 수'
		@author HeeRak
	-->
	<select id="selectLectureListCount" resultType="_int">
		select count(*)
		  from lecture
		 where status != 'D'
		   and user_no = #{userNo}
	</select>

	<!--
		한 강사의 '클래스 목록'
		@author HeeRak
	-->
	<select id="selectLectureByTeacher" resultMap="lectureResult">
		select
			   class_no
			 , class_title
			 , create_date
			 , thumbnail
			 , status
			 , subcat_no
		  from lecture
		 where status != 'D'
		   and user_no = #{userNo}
		 order
		    by create_date desc
	</select>

	<!--
		한 클래스 '클래스 챕터 목록'
		@author HeeRak
	 -->
	<select id="selectChapterList" resultMap="chapterResult">
		select chap_order
			 , class_no
		     , chap_name
		  from chapter
		 where class_no = #{classNo}
		 order
		    by chap_order asc
	</select>
	 <!--
		클래스 3 페이지 ClassVideo List 가져오기
		@author HeeRak
	 -->
	 <select id="ajaxSelectVideoListbyTeacher" resultMap="classVideoResult">
	 	select video_no
			 , class_no
			 , chap_order
			 , video_order
			 , sub_title
			 , origin_name
			 , change_name
		  from class_video
		 where class_no = #{classNo}
		 order
		    by chap_order asc, video_no asc
	 </select>
	 
	 <!-- 
	 	회원 강의 시청여부 조회
	 	@author HeeRak
	  -->
	 <select id="ajaxSelectVideoList" resultMap="classVideoResult">
	 	select video_no
			 , class_no
			 , chap_order
			 , video_order
			 , sub_title
			 , origin_name
			 , change_name
			 , watched
		  from class_video
		  join progress using(video_no)
		 where class_no = #{classNo}
		   and user_no = #{userNo}
		 order
		    by chap_order asc, video_no asc
	 </select>

	<!--

	 -->
	<update id="ajaxUpdateClassStuding" parameterType="ClassStuding">
		update class_studing
		   set video_no = #{videoNo}
		 where user_no = #{userNo}
		   and class_no =  #{classNo}
	</update>

	<!--
		클래스 펀딩승인처리 결과
		@author HeeRak
	 -->
	 <insert id="insertFunding" parameterType="Lecture">
	 	insert
	 	  into
	 	     (
	 	       class_no
	 	     )
	 	  values
	 	     (
	 	       #{classNo}
	 	     )
	 </insert>
	 <update id="startFunding" parameterType="Lecture">
	 	update lecture
	 	   set status = 'F'
	 	 where class_no = {classNo}
	 	   and user_no = {userNo}
	 </update>

	 <!--
		클래스 삭제 결과
		@author HeeRak
	 -->
	 <update id="deleteLecture" parameterType="Lecture">
	 	update lecture
	 	   set status = 'D'
	 	 where class_no = {classNo}
	 	   and user_no = {userNo}
	 </update>

	 <!--
		클래스 등록하기
		@author HeeRak
	 -->
	 <insert id="insertLecture" parameterType="Lecture">
	 	<selectKey keyProperty="classNo" resultType="_int" order="AFTER">
	 		select seq_lno.currval from dual
	 	</selectKey>
	 	insert
	 	  into lecture
	 	   	 (
	 	   	   class_no
	 	   	 , user_no
	 	   	 )
	 	 values
	 	     (
	 	       seq_lno.nextval
	 	     , #{userNo}
	 	     )
	 </insert>

	 <!--
		클래스 0-4 페이지 lecture 가져오기
		@author HeeRak
	 -->
	 <select id="selectLectureInput" parameterType="Lecture" resultMap="lectureResult">
	 	select class_no
			 , class_title
			 , create_date
			 , thumbnail
			 , intro_file
			 , intro_title
			 , intro_content
			 , status
			 , period
			 , need
			 , note
			 , pos_term
			 , price
			 , subcat_no
		  from lecture
		 where user_no = #{userNo}
		   and class_no = #{classNo}
		   and status != 'D'
	 </select>

	<!--
		클래스 2 페이지 ClassIntro List 가져오기
		@author HeeRak
	 -->
	 <select id="selectIntroList2" parameterType="Lecture" resultMap="introResult">
	 	select intro_order
			 , class_no
			 , intro_image
			 , intro_content
		  from class_intro
		 where class_no = #{classNo}
	 </select>

	 <!--
		클래스 input 0-4페이지 등록|수정|삭제
		@author HeeRak
	 -->
	 <update id="updateLecture0" parameterType="Lecture">
		 update lecture
		    set period = #{period}
		      , need = #{need}
		      <if test="note != null">
		      , note = #{note}
		      </if>
		      , subcat_no = #{subcatNo}
		  where user_no = #{userNo}
		    and class_no = #{classNo}
	 </update>
	 <update id="updateLecture1">
	 	update lecture
	 	   set class_title = #{classTitle}
			 , thumbnail = #{thumbnail}
			 , intro_file = #{introFile}
		 where user_no = #{userNo}
	       and class_no = #{classNo}
	 </update>
	 <update id="updateLecture2">
	 	update lecture
	 	   set intro_title = #{introTitle}
			 , intro_content = #{introContent}
		 where user_no = #{userNo}
	       and class_no = #{classNo}
	 </update>
	 <insert id="updateClassIntro2" parameterType="java.util.List">
	 	merge into class_intro ci
	 	     using (
	 	     		<foreach collection="list" item="intro" open="" close="" separator="union">
	 	     			select #{intro.introOrder} as intro_order
	 	     			     , #{intro.classNo} as class_no
	 	     			     , #{intro.introImage} as intro_image
	 	     			     , #{intro.introContent} as intro_content
	 	     			  from dual
	 	     		</foreach>
	 	     		) d
	 	     	on (
	 	     		 ci.intro_order = d.intro_order
	 	     	 and ci.class_no = d.class_no
	 	     	 	)
	 	     	 	when matched then
	 	     	 		 update
	 	     	 		 <set>
	 	     	 		 	ci.intro_image = d.intro_image,
	 	     	 		 	ci.intro_content = d.intro_content
	 	     	 		 </set>
	 	     	 	when not matched then
	 	     	 		 insert
	 	     	 		 <trim prefix="(" suffix=")" suffixOverrides=",">
	 	     	 		 		intro_order
	 	     	 		 	  , class_no
	 	     	 		 	  , intro_image
	 	     	 		 	  , intro_content
	 	     	 		 </trim>
	 	     	 		 <trim prefix="values (" suffix=")" suffixOverrides=",">
	 	     	 		 	    d.intro_order
	 	     	 		 	  , d.class_no
	 	     	 		 	  , d.intro_image
	 	     	 		 	  , d.intro_content
	 	     	 		 </trim>
	 </insert>
	 <delete id="deleteClassIntro2">
	 	delete
	 	  from class_intro
	 	 where intro_order > #{introLength}
	 	   and class_no = #{classNo}
	 </delete>
	 <delete id="deleteVideoList" parameterType="java.util.Arrays">
	 	delete
	 	  from class_video
	 	 where change_name in
	 	 	<foreach collection="array" item="fileName" index="index" open="(" close=")" separator=",">
				#{fileName}
	 	 	</foreach>
	 </delete>
	 <!-- 
	 <delete id="deleteChapterList" parameterType="java.util.List">
	 	delete from chapter
	 	 <where>
	 	 	<foreach collection="list" item="ch" open="" close="" separator="or">
				(chap_order = #{ ch.chapOrder } and class_no = #{ ch.classNo })
	 	 	</foreach>
	 	 </where>
	 </delete>
	  -->
	  <!-- 
	  <delete id="deleteVideoListCount">
	 	<![CDATA[
	 	delete from class_video
	 	 where chap_order > #{ chapOrder } 
	 	   and class_no = #{ classNo } 	
	 	   ]]>
	 </delete>
	   -->
	 <delete id="deleteChapterList">
	 	<![CDATA[
	 	delete from chapter
	 	 where chap_order > #{ chapOrder } 
	 	   and class_no = #{ classNo } 	
	 	   ]]>
	 </delete>
	 <insert id="updateChapterList" parameterType="java.util.List">
	 	merge into chapter ch
	 	     using (
	 	     		<foreach collection="list" item="ch" open="" close="" separator="union">
	 	     			select #{ch.chapOrder} as chap_order
	 	     			     , #{ch.classNo} as class_no
	 	     			     , #{ch.chapName} as chap_name
	 	     			  from dual
	 	     		</foreach>
	 	     		) d
	 	     	on (
	 	     		 ch.chap_order = d.chap_order
	 	     	 and ch.class_no = d.class_no
	 	     	 	)
	 	     	 	when matched then
	 	     	 		 update
	 	     	 		 <set>
	 	     	 		 	ch.chap_name = d.chap_name
	 	     	 		 </set>
	 	     	 	when not matched then
	 	     	 		 insert
	 	     	 		 <trim prefix="(" suffix=")" suffixOverrides=",">
	 	     	 		 		chap_order
	 	     	 		 	  , class_no
	 	     	 		 	  , chap_name
	 	     	 		 </trim>
	 	     	 		 <trim prefix="values (" suffix=")" suffixOverrides=",">
	 	     	 		 	    d.chap_order
	 	     	 		 	  , d.class_no
	 	     	 		 	  , d.chap_name
	 	     	 		 </trim>
	 </insert>
	 <insert id="insertChapter" parameterType="java.util.List">
	 	     <foreach collection="list" item="ch" separator=" " open="insert all" close="select * from dual">
	 	  into chapter
	 	     (
	 	       chap_order
		 	 , class_no
		 	 , chap_name
	 	     )
	 	     values
	 	     (
	 	       #{ch.chapOrder}
	 	     , #{ch.classNo}
	 	     , #{ch.chapName}
	 	     )
	 	     </foreach>
	 </insert>
	 <insert id="insertClassVideo" parameterType="java.util.List">
	 	insert
	 	  into class_video
	 	     (
	 	       video_no
		 	 , class_no
		 	 , chap_order
		 	 , video_order
		 	 , sub_title
		 	 , origin_name
		 	 , change_name
	 	     )
	 	     select seq_vno.nextval, input.* from
	 	     <foreach collection="list" item="cv" separator="union all" open="(" close=") input">
	 	       select 
	 	     	 	  #{cv.classNo} as class_no
	 	     		, #{cv.chapOrder} as chapOrder
	 	     		, #{cv.videoOrder} as videoOrder
	 	     		, #{cv.subTitle} as sub_title
	 	     		, #{cv.originName} as origin_name
	 	     		, #{cv.changeName} as change_name
	 	     	 from dual
	 	     </foreach>
	 </insert>
	 <insert id="updateVideoList" parameterType="java.util.List">
	 	merge into class_video cv
	 	     using (
	 	     		<foreach collection="list" item="cv" open="(" close=") order by chap_order asc, video_order desc" separator="union all">
	 	     			select #{cv.videoNo} as video_no
	 	     			     , #{cv.videoOrder} as video_order
	 	     			     , #{cv.classNo} as class_no
	 	     			     , #{cv.chapOrder} as chap_order
	 	     			     , #{cv.subTitle} as sub_title
	 	     			     , #{cv.originName} as origin_name
	 	     			     , #{cv.changeName} as change_name
	 	     			  from dual
	 	     		</foreach>
	 	     		) d
	 	     	on (
	 	     		 cv.video_no = d.video_no
	 	     	 	)
	 	     	 	when matched then
	 	     	 		 update
	 	     	 		 <set>
	 	     	 		 	cv.chap_order = d.chap_order,
	 	     	 		 	cv.video_order = d.video_order,
	 	     	 		 	cv.sub_title = d.sub_title,
	 	     	 		 	cv.origin_name = d.origin_name,
	 	     	 		 	cv.change_name = d.change_name
	 	     	 		 </set>
	 	     	 	when not matched then
	 	     	 		 insert
	 	     	 		 <trim prefix="(" suffix=")" suffixOverrides=",">
	 	     	 		 		video_no
	 	     	 		 	  , class_no
	 	     	 		 	  , chap_order
	 	     	 		 	  , video_order
	 	     	 		 	  , sub_title
	 	     	 		 	  , origin_name
	 	     	 		 	  , change_name
	 	     	 		 </trim>
	 	     	 		 <trim prefix="values (" suffix=")" suffixOverrides=",">
	 	     	 		 	    seq_vno.nextval
	 	     	 		 	  , d.class_no
	 	     	 		 	  , d.chap_order
	 	     	 		 	  , d.video_order
	 	     	 		 	  , d.sub_title
	 	     	 		 	  , d.origin_name
	 	     	 		 	  , d.change_name
	 	     	 		 </trim>
	 </insert>
	 <update id="updateLecture4">
	 	update lecture
	 	   set pos_term = #{posTerm}
	 	     , price = #{price}
	 	 where class_no = #{classNo}
	 	   and user_no = #{userNo}
	 </update>

	 <!--
	 	강사 강의 등록|수정 완성도
	 	@author HeeRak
	  -->
	 <select id="ajaxLoadDegree" resultType="_int" parameterType="_int">
	 	select decode(count(need), 0, 0, 1)
		     + decode(count(class_title), 0, 0, 1)
		     + decode(count(price), 0, 0, 1)
		     + decode(count(chap_order), 0, 0, 1)
		     + decode(count(intro_order), 0, 0, 1) as degree
		  from lecture
		  left join class_intro using(class_no)
		  left join chapter using(class_no)
		 where class_no = #{classNo}
	 </select>
	 
	 

	 <!--
	 	강사 강의 등록|수정 완성도
	 	@author HeeRak
	  -->
	  <update id="updateStatus">
	  	update lecture
	  		<choose>
	  		<when test=' "W".equals(status) '>
	  	   set status = 'I'
	  		</when>
	  		<otherwise>
	  	   set status = 'A'
	  		</otherwise>
	  		</choose>
	  	 where class_no = #{classNo}
	  	   and user_no = #{userNo}
	  </update>

	  <!--
		  	회원 영상 시청 기록 수정
		 	@author HeeRak
	   -->
	   <update id="ajaxUpdateWatched" parameterType="Progress">
	   	update progress
	   	   set watched = 'Y'
	   	 where user_no = #{userNo}
	   	   and video_no = #{videoNo}
	   	   and watched = 'N'
	   </update>

	   <!--
	   		회원 영상시청 진척도
	   		@author HeeRak
	    -->
	   <select id="ajaxLoadStudingDegree" resultType="_int" parameterType="ClassStuding">
	   	select round(count(watched) /  (select count(video_no)
                           from class_video
                          where class_no = #{classNo}) * 100, 0)
		  from progress
		 where user_no = #{userNo}
		   and video_no in(select video_no
		                     from class_video
		                    where class_no = #{classNo})
		 group by watched
		 having watched = 'Y'
	   </select>

	   <!--
	   		회원 최근 영상시청 번호 조회
	   		@author HeeRak
	    -->
	   <select id="ajaxlastViewVideoLoad" resultType="_int">
	   	select video_no
	   	  from class_studing
	   	 where user_no = #{userNo}
	   	   and class_no = #{classNo}
	   </select>

	<select id="selectMyLecVideo" parameterType="map" resultMap="classVideoResult">
		select
			   video_no
		  from class_video
		 where class_no = #{classNo}
	</select>

	<!--
		@author yeji lee
		설문조사 추가
	 -->
	<insert id="insertSurvey" parameterType="Survey">
		insert
   		  into survey
		  values
		  (
		    SEQ_VNO.nextval
		  , #{userNo}
		  , #{quality}
		  , #{satisfaction}
		  , #{difficulty}
		  , #{price}
		  , #{score}
		  , #{review}
		  , sysdate
		  , #{classNo}
		  , #{teacherNo}
		  )
	</insert>
</mapper>
